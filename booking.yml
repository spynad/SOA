openapi: 3.0.3
info:
  title: SOA Lab 1 Booking Service Swagger - OpenAPI 3.0
  description: SOA Lab 1 Booking Service OpenAPI documentation
  contact:
    email: the47iq@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
tags:
  - name: booking
    description: Booking of the tickets
paths:
  /booking/person/{person-id}/cancel:
    post:
      tags:
        - booking
      summary: Cancel booking of the tickets for person
      description: Sets the owner and the price attributes to null for all tickets owned by a person
      operationId: cancelBooking
      parameters:
        - name: person-id
          in: path
          description: ID of person
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Started operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OperationalResponse'
        '404':
          description: Person not found
  /booking/person/cancel/{id}:
    get:
      tags:
        - booking
      summary: Get status of the booking cancelation of the tickets for person
      description: Get status of the booking cancelation of the tickets for person
      operationId: getCancelBooking
      parameters:
        - name: id
          in: path
          description: ID of an operation
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OperationalStatusResponse'
        '404':
          description: Operation not found
    delete:
      tags:
        - booking
      summary: Cancel the booking cancelation of the tickets for person
      description: Cancel the booking cancelation of the tickets for person
      operationId: cancelBookingCancellation
      parameters:
        - name: id
          in: path
          description: ID of an operation
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OperationalStatusResponse'
        '400':
          description: Operation can't be cancelled
        '404':
          description: Operation not found
    
  /booking/sell/{ticket-id}/{person-id}/{price}:
    post:
      tags:
        - booking
      summary: Sell a ticket to a person
      description: Sets the price and the owner attributes and return an updated ticket object information
      operationId: sellTicket
      parameters:
        - name: ticket-id
          in: path
          description: ID of ticket to sell
          required: true
          schema:
            type: integer
            format: int64
        - name: price
          in: path
          description: Price of the ticket
          required: true
          schema:
            type: integer
            format: int32
        - name: person-id
          in: path
          description: ID of person
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Started operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OperationalResponse'
        '400':
          description: Validation exception
        '404':
          description: Either ticket not found or person not found
  /booking/sell/{id}:
    get:
      tags:
        - booking
      summary: Get status of a ticket sell to a person
      description: Get status of a ticket sell to a person
      operationId: sellTicketStatus
      parameters:
        - name: id
          in: path
          description: ID of person
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OperationalStatusResponse'
        '400':
          description: Validation exception
        '404':
          description: Operation not found
    delete:
      tags:
        - booking
      summary: Cancel an operation of a ticket sell to a person
      description: Cancel an operation of a ticket sell to a person
      operationId: sellTicketCancel
      parameters:
        - name: id
          in: path
          description: ID of person
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OperationalStatusResponse'
        '400':
          description: Validation exception
        '404':
          description: Operation not found
  
components:
  schemas:
    Ticket:
      type: object
      xml:
        name: Ticket
      properties:
        id:
          type: integer
          format: int64
          example: 10
          minimum: 1
        name:
          type: string
          minLength: 1
          example: Ticket name
        coordinatesId:
          type: integer
          format: int64
          example: 40
        creationDate:
          type: string
          format: date-time
        price:
          type: integer
          format: int32
          minimum: 1
          example: 10
        discount:
          type: integer
          format: int64
          minimum: 1
          maximum: 101
          example: 40
        refundable:
          type: boolean
        type:
          type: string
          enum:
            - VIP
            - USUAL
            - BUDGETARY
            - CHEAP
        personId:
          type: integer
          format: int64
          example: 40
      required:
        - id
        - name
        - coordinates
        - creationDate
        - price
        - refundable
        - person
    Coordinates:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        x:
          type: number
          format: float
          example: 15
        'y':
          type: number
          format: float
          minimum: -235
          example: 15
    Person:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        weight:
          type: number
          format: float
          minimum: 1
          example: 150
        eyeColor:
          type: string
          enum:
            - GREEN
            - RED
            - ORANGE
        hairColor:
          type: string
          enum:
            - RED
            - YELLOW
            - ORANGE
            - BROWN
        country:
          type: string
          enum:
            - RUSSIA
            - USA
            - FRANCE
            - SPAIN
            - JAPAN
      required:
        - hairColor
    OperationalResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        time:
          type: string
          format: date-time
    OperationalStatusResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        time:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - CREATED
            - ERROR
            - PENDING
            - CANCELED
